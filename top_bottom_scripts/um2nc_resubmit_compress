#!/bin/bash

um_year() {
    year=$1
    y2=$(echo $year | cut -c3-)
    y1_=$(echo $year | cut -c1-2)  
    case $y1_ in
        10) y1=a;;
        11) y1=b;;
        12) y1=c;;
        13) y1=d;;
        14) y1=e;;
        15) y1=f;;
        16) y1=g;;
        17) y1=h;;
        18) y1=i;;
        19) y1=j;;
        20) y1=k;;
        21) y1=l;;
        22) y1=m;;
        23) y1=n;;
        24) y1=o;;
        25) y1=p;;
        26) y1=q;;
        27) y1=r;;
        28) y1=s;;
        29) y1=t;;
        30) y1=u;;
        31) y1=v;;
        32) y1=w;;
        33) y1=x;;
        34) y1=y;;
        35) y1=z;;
        *) echo "Error!! Year too small/big for um reference"
           exit 1;;
    esac
    echo $y1$y2
}

um_month() {
    month=$1
    case $month in
        1) mm="ja";;
        2) mm="fb";;
        3) mm="mr";;
        4) mm="ar";;
        5) mm="my";;
        6) mm="jn";;
        7) mm="jl";;
        8) mm="ag";;
        9) mm="sp";;
        10) mm="ot";;
        11) mm="nv";;
        12) mm="dc";;
        *) echo "Error!! ${month} not a valid value. Month value must be between 1-12"
           exit 1;;
    esac
    echo $mm
}

basis_time=$(grep -Po "MODEL_BASIS_TIME= \K.*" $JOBDIR/CNTLALL)

yst=$(cut -d, -f1 <<< $basis_time)
mst=$(cut -d, -f2 <<< $basis_time)
dst=$(cut -d, -f3 <<< $basis_time)

days=$(( $dst+$RUN_LEN_DAYS-1 ))
months=$(( $mst+$RUN_LEN_MONTHS ))
years=$(( $yst+$RUN_LEN_YEARS ))
tot=$(( $days + $months*30 + $years*360 ))

y=$(( $tot/360 ))
res=$(( $tot%360 ))
m=$(( $res/30 ))
d=$(( $res%30 ))

if [[ $d == 0 ]]; then
    d=30
    (( m-=1 ))
fi
if [[ $m == 0 ]]; then
    m=12
    (( y-=1 ))
fi

ref=$(um_year $y)$(um_month $m)
file=$DATAW/${RUNID}*a$ref

resub_time=$(grep -Po "RUN_RESUBMIT_INC= \K.*" $JOBDIR/CNTLALL)
yres=$(cut -d, -f1 <<< $resub_time)
mres=$(cut -d, -f2 <<< $resub_time)
months=$(( $mst + $mres -1 ))
y=$(( $yst + $yres + $months/12 ))
m=$(( $months%12 ))

if [[ $m == 0 ]]; then
    m=12
    (( y-=1 ))
fi

ref=$(um_year $y)$(um_month $m)
fileres=$DATAW/${RUNID}*a$ref

if [ -f $file ]; then
    outdir=/g/data/w48/dm5220/data/$RUNID
    if [ -d $outdir ]; then
        i=2
        while [ -d ${outdir}_${i} ] ; do
            ((i++))
        done
        outdir=${outdir}_${i}
    fi
    /g/data/w48/dm5220/scripts/um2nc/um2nc --id $RUNID -o $outdir
    /g/data/w48/dm5220/scripts/top_bottom_scripts/compress_build $RUNID
elif [[ $TYPE == "NRUN" ]] && [ -f $fileres ]
then
    /g/data/w48/dm5220/scripts/util/resubmit $JOBDIR
fi
exit