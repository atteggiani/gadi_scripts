#!/bin/bash

PROGNAME=$(basename $0)

usage() {
  cat << EOF
Script to resubmit one or more UM model run(s), with perturbed tac file.
Usage: $PROGNAME [-n/--no-run] [-v/--value <value>] <jobdir1-to-resubmit> <jobdir2-to-resubmit> ...

'$PROGNAME' copies each of the <jobdir-to-resubmit> folders to <jobdir-to-resubmit>_p_<value> and applies some changes to the run length and start dump file, to make it suitable for resubmission. 
Then, it perturbs the multi-level boundary condition multiplying it by <value>.
In the end, it submits the job running:
'qsub <jobdir-to-resubmit>_p_value/umuisubmit_run' for each folder.
If <value> is not specified, it is set to 0.9999.

List of keys/options:
-n/--no-run -> Perturbs the file and creates the new directory, without submitting the job.
-v/--value <value> -> Set the value for the perturbation of the multi-level boundary condition file.

EOF
  exit 1
}

while getopts ":nv:-:" opt; do
    case $opt in
        -)
            case "$OPTARG" in
                no-run)
                    run=0
                ;;
                value)
                    value="${!OPTIND}"
		    OPTIND=$((OPTIND+1))
                ;;
                 *)
                    echo "Uknown option --${OPTARG}"
                    usage
                ;;
            esac
        ;;
        n)
            run=0
        ;;
        v)
            value="$OPTARG"
        ;;
        \?) usage
        ;;
    esac
done
shift $((OPTIND-1))
value=${value:=0.9999}
run=${run:=1}
add='_p'

for exp in "$@"
do
  dir=/home/565/dm5220/umui_runs/$(basename ${exp%/})
  newdir="${dir}${add}_${value}"
  rm -r ${dir}_[rp]* &> /dev/null
  cp -r "$dir" "$newdir"
  if [[ $? != 0 ]]; then exit; fi
  tac_file=$(basename $(grep -Po ".*USRMULTI= 'USRMULTI : \K[^']*" ${newdir}/INITHIS)); tac_file=${tac_file%_p}
  qsub -N perturb_$(basename ${newdir})_${value} -v run=${run},value=${value},tac_file=${tac_file},newdir=${newdir} /g/data3/w40/dm5220/scripts/tac_rad_change/submit_perturb
done
exit
